// <auto-generated />
using System;
using Kalamarket.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kalamarket.DataLayer.Migrations
{
    [DbContext(typeof(KalamarketContext))]
    [Migration("20210218135309_Add_Tbl_Cart")]
    partial class Add_Tbl_Cart
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Address.Province", b =>
                {
                    b.Property<int>("provinceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("provincename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("provinceid");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Address.city", b =>
                {
                    b.Property<int>("cityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("cityname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isdelete")
                        .HasColumnType("bit");

                    b.Property<int>("provinceid")
                        .HasColumnType("int");

                    b.HasKey("cityid");

                    b.HasIndex("provinceid");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Address.useraddress", b =>
                {
                    b.Property<int>("addresid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<string>("Landlinephonenumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Plaque")
                        .HasColumnType("int");

                    b.Property<string>("Recipientname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("cityid")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("postalCode")
                        .HasColumnType("int");

                    b.Property<int>("provinceid")
                        .HasColumnType("int");

                    b.Property<int>("unit")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("addresid");

                    b.HasIndex("cityid");

                    b.HasIndex("provinceid");

                    b.HasIndex("userid");

                    b.ToTable("useraddresses");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Cart", b =>
                {
                    b.Property<int>("cartid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<bool>("ispay")
                        .HasColumnType("bit");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("cartid");

                    b.HasIndex("userid");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.CartDetail", b =>
                {
                    b.Property<int>("CartDetailid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cartid")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.HasKey("CartDetailid");

                    b.HasIndex("Cartid");

                    b.ToTable("CartDetail");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Category", b =>
                {
                    b.Property<int>("Categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryEnTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CategoryFaTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("SubCategory")
                        .HasColumnType("int");

                    b.HasKey("Categoryid");

                    b.HasIndex("SubCategory");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.Answer", b =>
                {
                    b.Property<int>("Answerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AnswerDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("questionid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Answerid");

                    b.HasIndex("questionid");

                    b.HasIndex("userid");

                    b.ToTable("answers");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.comment", b =>
                {
                    b.Property<int>("commentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("commentDislike")
                        .HasColumnType("int");

                    b.Property<string>("commentTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("commentlike")
                        .HasColumnType("int");

                    b.Property<string>("commnetDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<byte>("recommend")
                        .HasColumnType("tinyint");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("commentid");

                    b.HasIndex("productid");

                    b.HasIndex("userid");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.question", b =>
                {
                    b.Property<int>("questionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<string>("questionDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("questionid");

                    b.HasIndex("productid");

                    b.HasIndex("userid");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Faviorate", b =>
                {
                    b.Property<int>("Faviorateid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Faviorateid");

                    b.HasIndex("productid");

                    b.HasIndex("userid");

                    b.ToTable("Faviorates");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductGallery", b =>
                {
                    b.Property<int>("galleryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("imagename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.HasKey("galleryid");

                    b.HasIndex("productid");

                    b.ToTable("ProductGalleries");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductGurantee", b =>
                {
                    b.Property<int>("GuranteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("guranteename")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("GuranteeId");

                    b.ToTable("productGurantees");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductPrice", b =>
                {
                    b.Property<int>("Productpriceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Createdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateDisCount")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxorderCount")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("mainprice")
                        .HasColumnType("int");

                    b.Property<int>("productcolorid")
                        .HasColumnType("int");

                    b.Property<int>("productguranteeid")
                        .HasColumnType("int");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<int?>("sepcialprice")
                        .HasColumnType("int");

                    b.HasKey("Productpriceid");

                    b.HasIndex("productcolorid");

                    b.HasIndex("productguranteeid");

                    b.HasIndex("productid");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductReating", b =>
                {
                    b.Property<int>("Reatingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte>("Value")
                        .HasColumnType("tinyint");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<int>("propnameid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Reatingid");

                    b.HasIndex("productid");

                    b.HasIndex("propnameid");

                    b.HasIndex("userid");

                    b.ToTable("ProductReatings");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyName", b =>
                {
                    b.Property<int>("PropertyNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PropertyTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PropertyNameId");

                    b.ToTable("propertyNames");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyValue", b =>
                {
                    b.Property<int>("PropertyValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<int>("propertynameid")
                        .HasColumnType("int");

                    b.Property<string>("propertyvalue")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("PropertyValueId");

                    b.HasIndex("productid");

                    b.HasIndex("propertynameid");

                    b.ToTable("propertyValues");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Propertyname_Category", b =>
                {
                    b.Property<int>("pcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Categoryid")
                        .HasColumnType("int");

                    b.Property<int>("PropertyNameId")
                        .HasColumnType("int");

                    b.HasKey("pcId");

                    b.HasIndex("Categoryid");

                    b.HasIndex("PropertyNameId");

                    b.ToTable("propertyname_Categories");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Review", b =>
                {
                    b.Property<int>("reviewid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ArticleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AticleTitle")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewPositive")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Reviewnegative")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<string>("reviewDescription")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("reviewid");

                    b.HasIndex("productid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.brand", b =>
                {
                    b.Property<int>("brandid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("brandname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("brandid");

                    b.ToTable("brands");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.product", b =>
                {
                    b.Property<int>("productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Categoryid")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrginal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProductCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductSell")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Productimage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("brandid")
                        .HasColumnType("int");

                    b.Property<byte>("producStart")
                        .HasColumnType("tinyint");

                    b.Property<string>("productEnTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("productFaTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("productTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productweith")
                        .HasColumnType("int");

                    b.HasKey("productid");

                    b.HasIndex("Categoryid");

                    b.HasIndex("brandid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.productColor", b =>
                {
                    b.Property<int>("colorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("colorname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("colorid");

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.MainSlider", b =>
                {
                    b.Property<int>("Sliderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SliderImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SliderSort")
                        .HasColumnType("int");

                    b.Property<string>("SliderTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderAlt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sliderid");

                    b.ToTable("mainSliders");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.user", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActiveCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAccount")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userfamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Address.city", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Address.Province", "Province")
                        .WithMany("cities")
                        .HasForeignKey("provinceid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Address.useraddress", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Address.city", "city")
                        .WithMany()
                        .HasForeignKey("cityid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Address.Province", "province")
                        .WithMany()
                        .HasForeignKey("provinceid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("city");

                    b.Navigation("province");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Cart", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany("Carts")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.CartDetail", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Cart", "Cart")
                        .WithMany("cartDetails")
                        .HasForeignKey("Cartid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Category", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.Category", "Categori")
                        .WithMany()
                        .HasForeignKey("SubCategory");

                    b.Navigation("Categori");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.Answer", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.question", "question")
                        .WithMany("answers")
                        .HasForeignKey("questionid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("question");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.comment", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("comments")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany("comments")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.question", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("questions")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany("questions")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Faviorate", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("Faviorates")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany("Faviorates")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductGallery", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("ProductGallerys")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductPrice", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.productColor", "productColor")
                        .WithMany("productPrices")
                        .HasForeignKey("productcolorid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.ProductGurantee", "ProductGurantee")
                        .WithMany("productPrices")
                        .HasForeignKey("productguranteeid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("productPrices")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("productColor");

                    b.Navigation("ProductGurantee");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductReating", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("ProductReatings")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyName", "PropertyName")
                        .WithMany("ProductReatings")
                        .HasForeignKey("propnameid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.user", "user")
                        .WithMany("ProductReatings")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("PropertyName");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyValue", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany()
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyName", "PropertyName")
                        .WithMany("PropertyValues")
                        .HasForeignKey("propertynameid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("PropertyName");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Propertyname_Category", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.Category", "Category")
                        .WithMany("propertynames")
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyName", "PropertyName")
                        .WithMany("propertynames")
                        .HasForeignKey("PropertyNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PropertyName");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Review", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.product", "product")
                        .WithMany("reviews")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.product", b =>
                {
                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kalamarket.DataLayer.Entities.Entitieproduct.brand", "brand")
                        .WithMany("products")
                        .HasForeignKey("brandid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Address.Province", b =>
                {
                    b.Navigation("cities");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Cart", b =>
                {
                    b.Navigation("cartDetails");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.Category", b =>
                {
                    b.Navigation("products");

                    b.Navigation("propertynames");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.FaQ.question", b =>
                {
                    b.Navigation("answers");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.ProductGurantee", b =>
                {
                    b.Navigation("productPrices");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.PropertyName", b =>
                {
                    b.Navigation("ProductReatings");

                    b.Navigation("propertynames");

                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.brand", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.product", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("Faviorates");

                    b.Navigation("ProductGallerys");

                    b.Navigation("productPrices");

                    b.Navigation("ProductReatings");

                    b.Navigation("questions");

                    b.Navigation("reviews");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.Entitieproduct.productColor", b =>
                {
                    b.Navigation("productPrices");
                });

            modelBuilder.Entity("Kalamarket.DataLayer.Entities.user", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("comments");

                    b.Navigation("Faviorates");

                    b.Navigation("ProductReatings");

                    b.Navigation("questions");
                });
#pragma warning restore 612, 618
        }
    }
}
